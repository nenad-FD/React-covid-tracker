{"version":3,"sources":["Components/BoxInfo/BoxInfo.js","Components/Table/Table.js","Components/Graph/Graph.js","Components/ChangeView/ChangeView.js","Components/Map/Map.js","App.js","index.js"],"names":["BoxInfo","title","todayCases","total","active","props","Card","className","variant","onClick","CardContent","Typography","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","tableContainer","height","overflow","marginBottom","TableComponent","countries","classes","TableContainer","component","Paper","aria-label","TableHead","align","TableBody","tableBody","map","country","scope","cases","recovered","deaths","Graph","casesType","useState","keys","setKeys","values","setValues","useEffect","a","fetch","then","response","json","data","keysOfObject","Object","valuesOfObject","fetchData","casesTypeColors","borderColor","config","labels","datasets","label","borderWidth","hoverBorderWidth","options","display","text","legend","tooltips","ChangeView","center","zoom","useMap","setView","Map","hex","multiplier","MapContainer","lat","long","TileLayer","attribution","url","Circle","countryInfo","radius","Math","sqrt","pathOptions","fillColor","Popup","style","backgroundImage","flag","App","setCountries","countryCode","setCountryCode","selectedCountry","setSelectedCountry","setCasesType","mapCenter","setMapCenter","mapZoom","setMapZoom","onChangeCountry","event","target","value","getDataCountries","FormControl","Select","onChange","MenuItem","iso2","e","todayRecovered","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e1eae30.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BoxInfo.css\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nfunction BoxInfo({ title, todayCases, total, active, ...props }) {\r\n  return (\r\n    <Card\r\n      className={`boxInfo ${active && \"boxInfo__selected\"}`}\r\n      variant=\"outlined\"\r\n      onClick={props.onClick}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\">{title}</Typography>\r\n        <Typography variant=\"subtitle1\">+{todayCases}</Typography>\r\n        <Typography variant=\"subtitle2\">+{total}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BoxInfo;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n//useStyles\r\nconst useStyles = makeStyles({\r\n  tableContainer: {\r\n    height: \"500px\",\r\n    overflow: \"scroll\",\r\n    marginBottom: \"2em\",\r\n  },\r\n});\r\n\r\nfunction TableComponent({ countries }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.tableContainer} component={Paper}>\r\n      <Table aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Country</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Cases</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Recovered</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Deaths</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tableBody}>\r\n          {countries.map((country) => (\r\n            <StyledTableRow key={country.country}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {country.country}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{country.cases}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                {country.recovered}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{country.deaths}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default TableComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction Graph({ casesType }) {\r\n  const [keys, setKeys] = useState([]);\r\n  const [values, setValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //Get keys from object\r\n          const keysOfObject = Object.keys(data[casesType]);\r\n          setKeys(keysOfObject);\r\n          //Get values from object\r\n          const valuesOfObject = Object.values(data[casesType]);\r\n          setValues(valuesOfObject);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  const casesTypeColors = {\r\n    cases: {\r\n      borderColor: \"#e65c00\",\r\n      backgroundColor: \"rgba(230, 92, 0, 0.5)\",\r\n    },\r\n    recovered: {\r\n      borderColor: \"#7dd71d\",\r\n      backgroundColor: \"rgba(125,215,29, 0.5)\",\r\n    },\r\n    deaths: {\r\n      borderColor: \"#cc1034\",\r\n      backgroundColor: \"rgba(251,68,67,0.5)\",\r\n    },\r\n  };\r\n\r\n  const config = {\r\n    data: {\r\n      labels: keys,\r\n      datasets: [\r\n        {\r\n          label: `Worldwide ${casesType}`,\r\n          data: values,\r\n          backgroundColor: `${casesTypeColors[casesType].backgroundColor}`,\r\n          borderWidth: 1,\r\n          borderColor: `${casesTypeColors[casesType].borderColor}`,\r\n          hoverBorderWidth: 3,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: `Worldwide ${casesType}`,\r\n        fontSize: 15,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltips: {},\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      <Line data={config.data} options={config.options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"," import React from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\n\r\nfunction ChangeView({ center, zoom }) {\r\n  const map = useMap();\r\n  map.setView(center, zoom);\r\n  return null;\r\n}\r\n\r\nexport default ChangeView;\r\n","import React from \"react\";\r\nimport \"./Map.css\";\r\nimport ChangeView from \"../ChangeView/ChangeView\";\r\nimport { MapContainer, TileLayer, Circle, Popup } from \"react-leaflet\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  const casesTypeColors = {\r\n    cases: {\r\n      hex: \"#e65c00\",\r\n      multiplier: 600,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      multiplier: 600,\r\n    },\r\n    deaths: {\r\n      hex: \"#cc1034\",\r\n      multiplier: 1100,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={[center.lat, center.long]} zoom={zoom}>\r\n        <ChangeView center={[center.lat, center.long]} zoom={zoom} />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        {/* Loop throught countries and draw circles on the screen*/}\r\n        {countries.map((country) => {\r\n          return (\r\n            <Circle\r\n              center={[country.countryInfo.lat, country.countryInfo.long]}\r\n              radius={\r\n                Math.sqrt(country[casesType]) *\r\n                casesTypeColors[casesType].multiplier\r\n              }\r\n              pathOptions={{\r\n                color: casesTypeColors[casesType].hex,\r\n                fillColor: casesTypeColors[casesType].hex,\r\n              }}\r\n            >\r\n              <Popup>\r\n                <div className=\"popup__container\">\r\n                  <div\r\n                    className=\"popup__flag\"\r\n                    style={{\r\n                      backgroundImage: `url(${country.countryInfo.flag})`,\r\n                    }}\r\n                  ></div>\r\n                  <div className=\"popup__name\">{country.country}</div>\r\n                  <div className=\"popup__cases\">Cases: {country.cases}</div>\r\n                  <div className=\"popup__recovered\">\r\n                    Recovered:{country.recovered}\r\n                  </div>\r\n                  <div className=\"popup__deaths\">Deaths: {country.deaths}</div>\r\n                </div>\r\n              </Popup>\r\n            </Circle>\r\n          );\r\n        })}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\n//Components\nimport BoxInfo from \"./Components/BoxInfo/BoxInfo\";\nimport Table from \"./Components/Table/Table\";\nimport Graph from \"./Components/Graph/Graph\";\nimport Map from \"./Components/Map/Map\";\n//Material UI\nimport { Typography, FormControl, Select, MenuItem } from \"@material-ui/core\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]); //List of counrties\n  const [countryCode, setCountryCode] = useState(\"worldwide\");\n  const [selectedCountry, setSelectedCountry] = useState({});\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, long: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(2);\n\n  //Functions\n  const onChangeCountry = async (event) => {\n    const countryCode = event.target.value; //ovo moras ovako, ne mozes direktno dole\n    setCountryCode(countryCode); //Set Country Code: AF, UK ...\n    let url;\n    if (countryCode === \"worldwide\") {\n      url = \"https://disease.sh/v3/covid-19/all\";\n    } else {\n      url = ` https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    }\n    //Fetch selected country\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setSelectedCountry(data);\n        if (countryCode === \"worldwide\") {\n          setMapCenter({ lat: 34.80746, long: -40.4796 });\n        } else {\n          setMapCenter({\n            lat: data.countryInfo.lat,\n            long: data.countryInfo.long,\n          });\n        }\n\n        setMapZoom(5);\n      });\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setSelectedCountry(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    //Get data from API--> list of all countries\n    const getDataCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => setCountries(data));\n    };\n    getDataCountries();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"left__side container\">\n        <div className=\"leftSide__header\">\n          <Typography\n            variant=\"h3\"\n            color=\"secondary\"\n            className=\"header__heading\"\n          >\n            Covid 19 Tracker\n          </Typography>\n          <FormControl variant=\"outlined\" className=\"header__formControl\">\n            <Select onChange={onChangeCountry} value={countryCode}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => {\n                return (\n                  <MenuItem\n                    key={country.country}\n                    value={country.countryInfo.iso2}\n                  >\n                    {country.country}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <section className=\"leftSide__boxInfo\">\n          <BoxInfo\n            casesType={casesType}\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType(\"cases\")}\n            title={\"Coronavirus cases\"}\n            todayCases={selectedCountry.todayCases}\n            total={selectedCountry.cases}\n            value=\"cases\"\n          />\n          <BoxInfo\n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            title={\"Recovered\"}\n            todayCases={selectedCountry.todayRecovered}\n            total={selectedCountry.recovered}\n            value=\"recovered\"\n          />\n          <BoxInfo\n            active={casesType === \"deaths\"}\n            onClick={(e) => setCasesType(\"deaths\")}\n            title={\"Deaths\"}\n            todayCases={selectedCountry.todayDeaths}\n            total={selectedCountry.deaths}\n            value=\"deaths\"\n          />\n        </section>\n        <Map\n          countries={countries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <div className=\"right__side container\">\n        <Table countries={countries} />\n        <Graph casesType={casesType} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}